"""Initial migration

Revision ID: ccbc5dd60b0e
Revises: 
Create Date: 2025-03-30 12:40:29.486110

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'ccbc5dd60b0e'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=64), nullable=False),
    sa.Column('last_name', sa.String(length=64), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=512), nullable=True),
    sa.Column('role', sa.Enum('PROPERTY_OWNER', 'SERVICE_STAFF', 'PROPERTY_MANAGER', 'ADMIN', name='userroles'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_email'), ['email'], unique=True)

    op.create_table('inventory_catalog_item',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('category', sa.Enum('CLEANING', 'BATHROOM', 'KITCHEN', 'BEDROOM', 'LAUNDRY', 'GENERAL', 'OTHER', name='itemcategory'), nullable=False),
    sa.Column('unit_of_measure', sa.String(length=20), nullable=False),
    sa.Column('sku', sa.String(length=50), nullable=True),
    sa.Column('barcode', sa.String(length=100), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('unit_cost', sa.Float(), nullable=True),
    sa.Column('purchase_link', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['creator_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('inventory_catalog_item', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_inventory_catalog_item_barcode'), ['barcode'], unique=False)

    op.create_table('password_reset',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('token', sa.String(length=100), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('token')
    )
    op.create_table('property',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('street_address', sa.String(length=100), nullable=False),
    sa.Column('city', sa.String(length=50), nullable=False),
    sa.Column('state', sa.String(length=50), nullable=False),
    sa.Column('zip_code', sa.String(length=20), nullable=False),
    sa.Column('country', sa.String(length=50), nullable=True),
    sa.Column('property_type', sa.String(length=50), nullable=True),
    sa.Column('bedrooms', sa.Integer(), nullable=True),
    sa.Column('bathrooms', sa.Float(), nullable=True),
    sa.Column('square_feet', sa.Integer(), nullable=True),
    sa.Column('year_built', sa.Integer(), nullable=True),
    sa.Column('ical_url', sa.String(length=500), nullable=True),
    sa.Column('checkin_time', sa.String(length=10), nullable=True, comment='Standard check-in time (e.g., "15:00")'),
    sa.Column('checkout_time', sa.String(length=10), nullable=True, comment='Standard check-out time (e.g., "11:00")'),
    sa.Column('trash_day', sa.String(length=20), nullable=True, comment='Day of the week for trash collection'),
    sa.Column('recycling_day', sa.String(length=20), nullable=True, comment='Day of the week for recycling collection'),
    sa.Column('internet_provider', sa.String(length=100), nullable=True, comment='Internet service provider name'),
    sa.Column('internet_account', sa.String(length=100), nullable=True, comment='Internet account number'),
    sa.Column('internet_contact', sa.String(length=100), nullable=True, comment='Internet provider contact information'),
    sa.Column('electric_provider', sa.String(length=100), nullable=True, comment='Electricity provider name'),
    sa.Column('electric_account', sa.String(length=100), nullable=True, comment='Electricity account number'),
    sa.Column('electric_contact', sa.String(length=100), nullable=True, comment='Electricity provider contact information'),
    sa.Column('water_provider', sa.String(length=100), nullable=True, comment='Water provider name'),
    sa.Column('water_account', sa.String(length=100), nullable=True, comment='Water account number'),
    sa.Column('water_contact', sa.String(length=100), nullable=True, comment='Water provider contact information'),
    sa.Column('trash_provider', sa.String(length=100), nullable=True, comment='Trash collection provider name'),
    sa.Column('trash_account', sa.String(length=100), nullable=True, comment='Trash collection account number'),
    sa.Column('trash_contact', sa.String(length=100), nullable=True, comment='Trash collection contact information'),
    sa.Column('total_beds', sa.Integer(), nullable=True, comment='Total number of beds in the property'),
    sa.Column('bed_sizes', sa.String(length=255), nullable=True, comment='Description of bed sizes (e.g., "1 King, 2 Queen, 1 Twin")'),
    sa.Column('number_of_tvs', sa.Integer(), nullable=True, comment='Number of TVs in the property'),
    sa.Column('number_of_showers', sa.Integer(), nullable=True, comment='Number of showers'),
    sa.Column('number_of_tubs', sa.Integer(), nullable=True, comment='Number of bathtubs'),
    sa.Column('cleaning_supplies_location', sa.Text(), nullable=True, comment='Description of where cleaning supplies are stored'),
    sa.Column('wifi_network', sa.String(length=100), nullable=True, comment='WiFi network name'),
    sa.Column('wifi_password', sa.String(length=100), nullable=True, comment='WiFi password'),
    sa.Column('special_instructions', sa.Text(), nullable=True, comment='Any special instructions for cleaners'),
    sa.Column('entry_instructions', sa.Text(), nullable=True, comment='Instructions for entering the property (key codes, etc.)'),
    sa.Column('guest_access_token', sa.String(length=64), nullable=True, comment='Unique token for guest access link'),
    sa.Column('guest_rules', sa.Text(), nullable=True, comment='House rules for guests'),
    sa.Column('guest_checkin_instructions', sa.Text(), nullable=True, comment='Check-in instructions for guests'),
    sa.Column('guest_checkout_instructions', sa.Text(), nullable=True, comment='Check-out instructions for guests'),
    sa.Column('guest_wifi_instructions', sa.Text(), nullable=True, comment='WiFi instructions for guests'),
    sa.Column('local_attractions', sa.Text(), nullable=True, comment='Information about local attractions'),
    sa.Column('emergency_contact', sa.String(length=255), nullable=True, comment='Emergency contact information'),
    sa.Column('guest_access_enabled', sa.Boolean(), nullable=True, comment='Whether guest access is enabled'),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('guest_access_token')
    )
    op.create_table('inventory_item',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('property_id', sa.Integer(), nullable=False),
    sa.Column('catalog_item_id', sa.Integer(), nullable=False),
    sa.Column('current_quantity', sa.Float(), nullable=False),
    sa.Column('storage_location', sa.String(length=100), nullable=True),
    sa.Column('reorder_threshold', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['catalog_item_id'], ['inventory_catalog_item.id'], ),
    sa.ForeignKeyConstraint(['property_id'], ['property.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('invoice',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('invoice_number', sa.String(length=20), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('date_from', sa.Date(), nullable=True),
    sa.Column('date_to', sa.Date(), nullable=True),
    sa.Column('status', sa.Enum('DRAFT', 'SENT', 'PAID', 'OVERDUE', 'CANCELLED', name='invoicestatus'), nullable=False),
    sa.Column('subtotal', sa.Float(), nullable=False),
    sa.Column('tax_rate', sa.Float(), nullable=False),
    sa.Column('tax_amount', sa.Float(), nullable=False),
    sa.Column('total', sa.Float(), nullable=False),
    sa.Column('due_date', sa.Date(), nullable=True),
    sa.Column('paid_date', sa.Date(), nullable=True),
    sa.Column('payment_notes', sa.Text(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=False),
    sa.Column('property_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['property_id'], ['property.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('invoice_number')
    )
    op.create_table('property_calendar',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('property_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('ical_url', sa.String(length=500), nullable=False),
    sa.Column('is_entire_property', sa.Boolean(), nullable=True),
    sa.Column('room_name', sa.String(length=100), nullable=True),
    sa.Column('service', sa.String(length=20), nullable=False),
    sa.Column('last_synced', sa.DateTime(), nullable=True),
    sa.Column('sync_status', sa.String(length=50), nullable=True),
    sa.Column('sync_error', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['property_id'], ['property.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('property_image',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('property_id', sa.Integer(), nullable=False),
    sa.Column('image_path', sa.String(length=255), nullable=False),
    sa.Column('is_primary', sa.Boolean(), nullable=True),
    sa.Column('caption', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['property_id'], ['property.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('room',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('property_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('room_type', sa.String(length=50), nullable=False),
    sa.Column('square_feet', sa.Integer(), nullable=True),
    sa.Column('bed_type', sa.String(length=50), nullable=True),
    sa.Column('has_tv', sa.Boolean(), nullable=True),
    sa.Column('tv_details', sa.String(length=100), nullable=True),
    sa.Column('has_shower', sa.Boolean(), nullable=True),
    sa.Column('has_tub', sa.Boolean(), nullable=True),
    sa.Column('has_bathroom', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['property_id'], ['property.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('task_price',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('service_type', sa.Enum('CLEANING', 'HANDYMAN', 'LAWN_CARE', 'POOL_MAINTENANCE', 'GENERAL_MAINTENANCE', 'OTHER', name='servicetype'), nullable=False),
    sa.Column('pricing_model', sa.Enum('FIXED', 'HOURLY', 'BUNDLE', name='pricingmodel'), nullable=False),
    sa.Column('fixed_price', sa.Float(), nullable=True),
    sa.Column('hourly_rate', sa.Float(), nullable=True),
    sa.Column('property_id', sa.Integer(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['property_id'], ['property.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('inventory_transaction',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('transaction_type', sa.Enum('RESTOCK', 'USAGE', 'TRANSFER_IN', 'TRANSFER_OUT', 'ADJUSTMENT', name='transactiontype'), nullable=False),
    sa.Column('quantity', sa.Float(), nullable=False),
    sa.Column('previous_quantity', sa.Float(), nullable=False),
    sa.Column('new_quantity', sa.Float(), nullable=False),
    sa.Column('source_property_id', sa.Integer(), nullable=True),
    sa.Column('destination_property_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['destination_property_id'], ['property.id'], ),
    sa.ForeignKeyConstraint(['item_id'], ['inventory_item.id'], ),
    sa.ForeignKeyConstraint(['source_property_id'], ['property.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('room_furniture',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('room_id', sa.Integer(), nullable=False),
    sa.Column('furniture_type', sa.String(length=50), nullable=False),
    sa.Column('details', sa.String(length=100), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['room_id'], ['room.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('task',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('due_date', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'IN_PROGRESS', 'COMPLETED', name='taskstatus'), nullable=False),
    sa.Column('priority', sa.Enum('LOW', 'MEDIUM', 'HIGH', 'URGENT', name='taskpriority'), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('is_recurring', sa.Boolean(), nullable=True),
    sa.Column('recurrence_pattern', sa.Enum('NONE', 'DAILY', 'WEEKLY', 'MONTHLY', 'CUSTOM', name='recurrencepattern'), nullable=True),
    sa.Column('recurrence_interval', sa.Integer(), nullable=True),
    sa.Column('recurrence_end_date', sa.DateTime(), nullable=True),
    sa.Column('linked_to_checkout', sa.Boolean(), nullable=True),
    sa.Column('calendar_id', sa.Integer(), nullable=True),
    sa.Column('assign_to_next_cleaner', sa.Boolean(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['calendar_id'], ['property_calendar.id'], ),
    sa.ForeignKeyConstraint(['creator_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cleaning_session',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cleaner_id', sa.Integer(), nullable=False),
    sa.Column('property_id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('duration_minutes', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['cleaner_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['property_id'], ['property.id'], ),
    sa.ForeignKeyConstraint(['task_id'], ['task.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('notification',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=True),
    sa.Column('notification_type', sa.Enum('TASK_ASSIGNMENT', 'TASK_REMINDER', 'CALENDAR_UPDATE', 'TASK_COMPLETED', 'INVENTORY_LOW', 'REPAIR_REQUEST', name='notificationtype'), nullable=False),
    sa.Column('channel', sa.Enum('EMAIL', 'SMS', 'IN_APP', name='notificationchannel'), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('is_read', sa.Boolean(), nullable=True),
    sa.Column('sent_at', sa.DateTime(), nullable=True),
    sa.Column('read_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['task_id'], ['task.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('repair_request',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('property_id', sa.Integer(), nullable=False),
    sa.Column('reporter_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('location', sa.String(length=255), nullable=False),
    sa.Column('severity', sa.Enum('LOW', 'MEDIUM', 'HIGH', 'URGENT', name='repairrequestseverity'), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'APPROVED', 'REJECTED', 'CONVERTED', name='repairrequeststatus'), nullable=False),
    sa.Column('additional_notes', sa.Text(), nullable=True),
    sa.Column('task_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['property_id'], ['property.id'], ),
    sa.ForeignKeyConstraint(['reporter_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['task_id'], ['task.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('task_assignment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('external_name', sa.String(length=100), nullable=True),
    sa.Column('external_phone', sa.String(length=20), nullable=True),
    sa.Column('service_type', sa.Enum('CLEANING', 'HANDYMAN', 'LAWN_CARE', 'POOL_MAINTENANCE', 'GENERAL_MAINTENANCE', 'OTHER', name='servicetype'), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['task_id'], ['task.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('task_property',
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('property_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['property_id'], ['property.id'], ),
    sa.ForeignKeyConstraint(['task_id'], ['task.id'], ),
    sa.PrimaryKeyConstraint('task_id', 'property_id')
    )
    op.create_table('cleaning_feedback',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cleaning_session_id', sa.Integer(), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['cleaning_session_id'], ['cleaning_session.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('cleaning_session_id')
    )
    op.create_table('cleaning_media',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cleaning_session_id', sa.Integer(), nullable=False),
    sa.Column('media_type', sa.Enum('PHOTO', 'VIDEO', name='mediatype'), nullable=False),
    sa.Column('file_path', sa.String(length=500), nullable=False),
    sa.Column('storage_backend', sa.Enum('LOCAL', 'S3', 'RCLONE', name='storagebackend'), nullable=False),
    sa.Column('is_start_video', sa.Boolean(), nullable=True),
    sa.Column('original_filename', sa.String(length=255), nullable=True),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('mime_type', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['cleaning_session_id'], ['cleaning_session.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('invoice_item',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('invoice_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=False),
    sa.Column('quantity', sa.Float(), nullable=False),
    sa.Column('unit_price', sa.Float(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=True),
    sa.Column('cleaning_session_id', sa.Integer(), nullable=True),
    sa.Column('service_type', sa.Enum('CLEANING', 'HANDYMAN', 'LAWN_CARE', 'POOL_MAINTENANCE', 'GENERAL_MAINTENANCE', 'OTHER', name='servicetype'), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['cleaning_session_id'], ['cleaning_session.id'], ),
    sa.ForeignKeyConstraint(['invoice_id'], ['invoice.id'], ),
    sa.ForeignKeyConstraint(['task_id'], ['task.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('issue_report',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cleaning_session_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('location', sa.String(length=255), nullable=False),
    sa.Column('additional_notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['cleaning_session_id'], ['cleaning_session.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('repair_request_media',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('repair_request_id', sa.Integer(), nullable=False),
    sa.Column('file_path', sa.String(length=500), nullable=False),
    sa.Column('storage_backend', sa.Enum('LOCAL', 'S3', 'RCLONE', name='storagebackend'), nullable=False),
    sa.Column('original_filename', sa.String(length=255), nullable=True),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('mime_type', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['repair_request_id'], ['repair_request.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('issue_media',
    sa.Column('issue_id', sa.Integer(), nullable=False),
    sa.Column('media_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['issue_id'], ['issue_report.id'], ),
    sa.ForeignKeyConstraint(['media_id'], ['cleaning_media.id'], ),
    sa.PrimaryKeyConstraint('issue_id', 'media_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('issue_media')
    op.drop_table('repair_request_media')
    op.drop_table('issue_report')
    op.drop_table('invoice_item')
    op.drop_table('cleaning_media')
    op.drop_table('cleaning_feedback')
    op.drop_table('task_property')
    op.drop_table('task_assignment')
    op.drop_table('repair_request')
    op.drop_table('notification')
    op.drop_table('cleaning_session')
    op.drop_table('task')
    op.drop_table('room_furniture')
    op.drop_table('inventory_transaction')
    op.drop_table('task_price')
    op.drop_table('room')
    op.drop_table('property_image')
    op.drop_table('property_calendar')
    op.drop_table('invoice')
    op.drop_table('inventory_item')
    op.drop_table('property')
    op.drop_table('password_reset')
    with op.batch_alter_table('inventory_catalog_item', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_inventory_catalog_item_barcode'))

    op.drop_table('inventory_catalog_item')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_email'))

    op.drop_table('user')
    # ### end Alembic commands ###
