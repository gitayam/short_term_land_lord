service: short-term-landlord
runtime: python311

env_variables:
  # Flask configuration
  FLASK_ENV: production
  SECRET_KEY: "ys-UAwX9cpR15q61xQMvDsv03KUvigYnLyv5rkOQZsg"
  
  # Database configuration
  DATABASE_URL: "sqlite:///landlord_full.db"
  
  # Google Cloud configuration
  GOOGLE_CLOUD_PROJECT_ID: "speech-memorization"
  
  # Application settings
  BASE_URL: "https://short-term-landlord-dot-speech-memorization.uc.r.appspot.com"
  
  # Admin user configuration
  ADMIN_EMAIL: "admin@landlord-app.com"
  ADMIN_USERNAME: "admin"
  ADMIN_PASSWORD: "admin123"
  ADMIN_FIRST_NAME: "System"
  ADMIN_LAST_NAME: "Administrator"
  
  # Security settings
  WTF_CSRF_TIME_LIMIT: "3600"
  PERMANENT_SESSION_LIFETIME: "1800"
  
  # Performance settings
  CACHE_TYPE: "simple"
  SESSION_TYPE: "filesystem"
  SQLALCHEMY_RECORD_QUERIES: "false"
  DATABASE_QUERY_TIMEOUT: "30"
  SLOW_QUERY_THRESHOLD: "0.5"
  
  # File upload settings
  MAX_CONTENT_LENGTH: "16777216"  # 16MB
  MEDIA_STORAGE_BACKEND: "local"
  
  # Feature toggles (disabled for initial deployment)
  NOTIFICATION_EMAIL_ENABLED: "false"
  NOTIFICATION_SMS_ENABLED: "false"
  RATELIMIT_ENABLED: "false"
  
  # Monitoring settings
  HEALTH_CHECK_ENABLED: "true"
  PROMETHEUS_METRICS: "false"
  
  # Email configuration (optional)
  MAIL_SERVER: "smtp.sendgrid.net"
  MAIL_PORT: "587"
  MAIL_USE_TLS: "true"
  MAIL_USERNAME: "apikey"
  MAIL_PASSWORD: ""
  MAIL_DEFAULT_SENDER: "noreply@landlord-app.com"

automatic_scaling:
  min_instances: 0
  max_instances: 10
  target_cpu_utilization: 0.7
  target_throughput_utilization: 0.8

resources:
  cpu: 1
  memory_gb: 2
  disk_size_gb: 10

handlers:
# Static files (CSS, JS, images)
- url: /static
  static_dir: app/static
  secure: always
  expiration: "7d"
  http_headers:
    Cache-Control: "public, max-age=604800"

# Media files (user uploads)
- url: /media
  static_dir: app/static/uploads  
  secure: always
  expiration: "1d"

# Favicon
- url: /favicon.ico
  static_files: app/static/favicon.ico
  upload: app/static/favicon.ico
  secure: always

# Health check endpoint
- url: /health
  script: auto
  secure: always

# Service info endpoint
- url: /service-info
  script: auto
  secure: always

# API endpoints
- url: /api/.*
  script: auto
  secure: always

# Public worker calendar endpoints
- url: /worker-calendar/.*
  script: auto
  secure: always

# Public guest guidebook endpoints  
- url: /guest/.*/guidebook
  script: auto
  secure: always

# All other URLs go to Flask
- url: /.*
  script: auto
  secure: always

# Use gunicorn as the WSGI server
entrypoint: gunicorn main_full:app --bind :$PORT --workers 3 --timeout 120 --preload --max-requests 1000 --max-requests-jitter 100